export TMUX_TMPDIR=~/.tmux/tmp
export DOT=$HOME/Github/dotfiles
export DOTZSH=$DOT/zsh

#export PATH=$PATH:$HOME/.gem/ruby/2.7.0/bin
source $DOTZSH/load.tmuxinator.zsh
source $DOTZSH/load.functions.zsh
source $DOTZSH/load.sport.zsh
source $DOTZSH/load.path.zsh

# for file in $(find $DOTZSH -iname "load.*.zsh"); do;
#     source $file;
# done;

#source $DOTZSH/load.omz.zsh

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing DHARMA Initiative Plugin Manager (zdharma/zinit)…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f" || \
        print -P "%F{160}▓▒░ The clone has failed.%f"
fi
source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit installer's chunk

bindkey -s '^[[072q' 'bash echo "OK"'

bind '"^J":"echo `ok`"'

# A glance at the new for-syntax – load all of the above
# plugins with a single command. For more information see:
# https://zdharma.org/zinit/wiki/For-Syntax/

zinit for \
    light-mode  zsh-users/zsh-autosuggestions \
    light-mode  zdharma/fast-syntax-highlighting \
                zdharma/history-search-multi-word \
    pick"async.zsh" src"pure.zsh" \
                sindresorhus/pure


zinit light zinit-zsh/z-a-patch-dl
zinit ice id-as"zsh" atclone"./.preconfig
        CFLAGS='-I/usr/include -I/usr/local/include -g -O2 -Wall' \
        LDFLAGS='-L/usr/lib -L/usr/local/lib' ./configure --prefix='$ZPFX'" \
    atpull"%atclone" run-atpull make"install" pick"/dev/null"
zinit load zsh-users/zsh

# GIT INSTALLATION

zinit ice wait"2" lucid as"program" pick"bin/git-dsf"
zinit light zdharma/zsh-diff-so-fancy

zinit ice wait"2" lucid as"program" pick"git-now"
zinit light iwata/git-now

zinit ice wait"2" lucid as"program" pick"$ZPFX/bin/git-alias" make"PREFIX=$ZPFX" nocompile
zinit light tj/git-extras

zinit ice wait"2" lucid as"program" atclone'perl Makefile.PL PREFIX=$ZPFX' atpull'%atclone' \
            make'install' pick"$ZPFX/bin/git-cal"
zinit light k4rthik/git-cal

zinit light zinit-zsh/z-a-bin-gem-node

# Vim repository on GitHub – a typical source code that needs compilation – Zinit
# # can manage it for you if you like, run `./configure` and other `make`, etc. stuff.
# # Ice-mod `pick` selects a binary program to add to $PATH. You could also install the
# # package under the path $ZPFX, see: http://zdharma.org/ziniki/Compiling-programs
zinit ice as"program" atclone"rm -f src/auto/config.cache; ./configure --prefix=/usr/local --without-x --disable-nls --enable-gui=no --enable-multibyte --enable-rubyinterp --enable-luainterp --enable-pythoninterp  --with-features=huge --with-tlib=ncurses --with-features=huge --enable-multibyte --enable-rubyinterp=yes --enable-python3interp=yes --with-python3-config-dir=$(python3-config --configdir) --enable-perlinterp=yes --enable-gui=gtk2 --enable-cscope --with-features=big --prefix=/usr/local" atpull"%atclone" make pick"src/vim"
    zinit light vim/vim

# For GNU ls (the binaries can be gls, gdircolors, e.g. on OS X when installing the
# # coreutils package from Homebrew; you can also use https://github.com/ogham/exa)
zinit ice atclone"dircolors -b LS_COLORS > c.zsh" atpull'%atclone' pick"c.zsh" nocompile'!'
zinit light trapd00r/LS_COLORS


